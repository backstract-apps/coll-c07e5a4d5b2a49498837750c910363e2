name: BackStract GitHub Actions Log Streamer
description: Stream shell command logs to a BackStract's backend in real time.
inputs:
  command:
    description: 'Shell command to run'
    required: true
  endpoint:
    description: 'Log streaming HTTP endpoint'
    required: true
  token:
    description: 'Auth token'
    required: true
  step_name:
    description: 'Name of the deployment step'
    required: true
runs:
  using: "composite"
  steps:
    - shell: bash
      env:
        STEP_NAME: ${{ inputs.step_name }}
      run: |
        #!/bin/bash
        set -eo pipefail

        buffer=()
        flush() {
          if [ "${#buffer[@]}" -eq 0 ]; then return; fi
          json=$(jq -nc \
            --arg run_id "$GITHUB_RUN_ID" \
            --arg step "$STEP_NAME" \
            --arg repo "$GITHUB_REPOSITORY" \
            --arg branch "$GITHUB_REF_NAME" \
            --arg commit_sha "$GITHUB_SHA" \
            --arg actor "$GITHUB_ACTOR" \
            --argjson logs "$(printf '%s\n' "${buffer[@]}" | jq -R . | jq -s .)" \
            '{run_id: $run_id, step: $step, repository: $repo, branch: $branch, commit_sha: $commit_sha, actor: $actor, logs: $logs}')
          curl -s -X POST "${{ inputs.endpoint }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ inputs.token }}" \
            -d "$json" > /dev/null || true
          buffer=()
        }

        # Use temporary file to avoid subshell pipeline issue
        command_exit_code=0
        temp_file=$(mktemp)
        trap 'rm -f "$temp_file"' EXIT

        set +e
        eval "${{ inputs.command }}" 2>&1 | tee "$temp_file"
        command_exit_code="${PIPESTATUS[0]}"
        set -e

        while IFS= read -r line; do
          buffer+=("$line")
          if [ "${#buffer[@]}" -ge 10 ]; then flush; fi
        done < "$temp_file"

        flush

        # Send final "Done" event only for Deploy to AWS EKS Cluster step
        if [[ "$STEP_NAME" == "Deploy to AWS EKS Cluster" ]]; then
          if [ "${#buffer[@]}" -eq 0 ]; then
            buffer+=("Step completed with exit code: $command_exit_code")
          fi
          flush
        fi

        exit "$command_exit_code"
